package iuh.fit.cs; 
import java.util.*; 
public class TestCourse { 
	public void initData(CourseList c) { 
		try { 
			c.addCourse(new Course("C001", "Java", "CNTT", 3)); 
			c.addCourse(new Course("C002", "Python", "CNTT", 3)); 
			c.addCourse(new Course("C003", "Marketing", "Kinh t·∫ø", 2)); 
			c.addCourse(new Course("C004", "K·∫ø to√°n", "Kinh t·∫ø", 2)); 
			c.addCourse(new Course("C005", "M·∫°ng m√°y t√≠nh", "CNTT", 4)); 
			
		} catch(Exception e) { 
			System.out.println("loi khi them khoa hoc"+e.getMessage()); 
			}
	} 
	public static void main(String[] args) { 
		CourseList cl =new CourseList(100); 
		TestCourse tc=new TestCourse(); 
		tc.initData(cl);
		System.out.println("‚úÖ ƒê√£ th√™m " + cl.getCourse().length + " kh√≥a h·ªçc.");
		Scanner sc = new Scanner(System.in); 
		while (true) { 
			System.out.println("\n===== MENU ====="); 
			System.out.println("1. Th√™m kh√≥a h·ªçc"); 
			System.out.println("2. Hi·ªÉn th·ªã danh s√°ch"); 
			System.out.println("3. X√≥a kh√≥a h·ªçc"); 
			System.out.println("4. S·∫Øp x·∫øp theo m√£"); 
			System.out.println("5. T√¨m kh√≥a h·ªçc theo t√™n");
			System.out.println("6. T√¨m kh√≥a h·ªçc theo khoa");
			System.out.println("7. T√¨m kh√≥a h·ªçc c√≥ t√≠n ch·ªâ cao nh·∫•t");
			System.out.println("8. T√¨m khoa c√≥ nhi·ªÅu kh√≥a h·ªçc nh·∫•t");
			System.out.println("9. T√¨m kh√≥a h·ªçc theo m√£");
			System.out.println("0. Tho√°t"); 
			System.out.print("Ch·ªçn ch·ª©c nƒÉng: "); 
			int choice = sc.nextInt(); 
			sc.nextLine();
				switch (choice) {
					case 1:
					    try {
					        System.out.print("M√£: ");
					        String id = sc.nextLine().trim();
					        System.out.print("T√™n: ");
					        String name = sc.nextLine().trim();
					        System.out.print("Khoa: ");
					        String dept = sc.nextLine().trim();
					        System.out.print("T√≠n ch·ªâ: ");
					        int credit = Integer.parseInt(sc.nextLine().trim());
	
					        cl.addCourse(new Course(id, name, dept, credit));
					        System.out.println("‚úÖ Th√™m th√†nh c√¥ng!");
					    } catch (Exception e) {
					        System.out.println("‚ùå L·ªói: " + e.getMessage());
					    }
					    break;
					case 2:
					    Course[] allCourses = cl.getCourse();
					    if (allCourses.length == 0) {
					        System.out.println("üì≠ Danh s√°ch tr·ªëng.");
					    } else {
					        System.out.printf("%-10s %-20s %-15s %-6s\n", "M√£", "T√™n kh√≥a h·ªçc", "Khoa", "T√≠n ch·ªâ");
					        for (Course j : allCourses) {
					            if (j != null) {
					                System.out.printf("%-10s %-20s %-15s %-6d\n",
					                    j.getCourseId(), j.getTitle(), j.getDepartment(), j.getCredit());
					            }
					        }
					    }
					    break;
					case 3:
					    System.out.print("Nh·∫≠p m√£ kh√≥a h·ªçc c·∫ßn x√≥a: ");
					    String removeId = sc.nextLine().trim();
					    try {
					        if (cl.removeCourse(removeId)) {
					            System.out.println("‚úÖ ƒê√£ x√≥a kh√≥a h·ªçc c√≥ m√£: " + removeId);
					        } else {
					            System.out.println("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc.");
					        }
					    } catch (Exception e) {
					        System.out.println("‚ùå L·ªói: " + e.getMessage());
					    }
					    break;
					case 4:
					    Course[] sorted = cl.sortCourse();
					    if (sorted.length == 0) {
					        System.out.println("üì≠ Kh√¥ng c√≥ kh√≥a h·ªçc ƒë·ªÉ s·∫Øp x·∫øp.");
					    } else {
					        System.out.println("üìã Danh s√°ch sau khi s·∫Øp x·∫øp:");
					        System.out.printf("%-10s %-20s %-15s %-6s\n", "M√£", "T√™n kh√≥a h·ªçc", "Khoa", "T√≠n ch·ªâ");
					        for (Course c : sorted) {
					            System.out.printf("%-10s %-20s %-15s %-6d\n",
					                c.getCourseId(), c.getTitle(), c.getDepartment(), c.getCredit());
					        }
					    }
					    break;
					case 5:
						System.out.print("Nh·∫≠p t√™n kh√≥a h·ªçc c·∫ßn t√¨m: ");
						String title = sc.nextLine();
						Course[] foundByTitle = cl.searchCourse(title);
						if (foundByTitle.length == 0) {
						    System.out.println("Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc.");
						} else {
						    for (Course c : foundByTitle) {
						        System.out.printf("%-10s %-20s %-15s %-6d\n", c.getCourseId(), c.getTitle(), c.getDepartment(), c.getCredit());
						    }
						}
						break;
					case 6:
						System.out.print("Nh·∫≠p t√™n khoa: ");
						String deptSearch = sc.nextLine();
						Course[] foundByDept = cl.searchCourseByDepartment(deptSearch);
						if (foundByDept.length == 0) {
						    System.out.println("Kh√¥ng c√≥ kh√≥a h·ªçc n√†o thu·ªôc khoa n√†y.");
						} else {
						    for (Course c : foundByDept) {
						        System.out.printf("%-10s %-20s %-15s %-6d\n", c.getCourseId(), c.getTitle(), c.getDepartment(), c.getCredit());
						    }
						}
						break;
					case 7:
						Course[] maxCreditCourses = cl.findMaxCreditCourse();
						System.out.println("C√°c kh√≥a h·ªçc c√≥ t√≠n ch·ªâ cao nh·∫•t:");
						for (Course c : maxCreditCourses) {
						    System.out.printf("%-10s %-20s %-15s %-6d\n", c.getCourseId(), c.getTitle(), c.getDepartment(), c.getCredit());
						}
						break;
					case 8:
						String topDept = cl.findDepartmentWithMostCourse();
						System.out.println("Khoa c√≥ nhi·ªÅu kh√≥a h·ªçc nh·∫•t: " + topDept);
						break;
					case 9:
						System.out.print("Nh·∫≠p m√£ kh√≥a h·ªçc: ");
						String idSearch = sc.nextLine();
						Course found = cl.SearchCourseById(idSearch);
						if (found == null) {
						    System.out.println("Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc.");
						} else {
						    System.out.printf("%-10s %-20s %-15s %-6d\n", found.getCourseId(), found.getTitle(), found.getDepartment(), found.getCredit());
						}
						break;
						case 0: 
							System.out.println("K·∫øt th√∫c ch∆∞∆°ng tr√¨nh."); 
							sc.close(); 
							return; 
						default: 
							System.out.println("Ch·ªçn sai, vui l√≤ng th·ª≠ l·∫°i."); 
						
				}
		}
	}
}

